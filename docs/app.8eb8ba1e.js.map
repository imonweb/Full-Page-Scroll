{"version":3,"sources":["js/app.js"],"names":["activeSection","sections","document","querySelectorAll","navLinks","navBtns","activeSectionHandler","currentSectionId","forEach","link","dataset","section","classList","remove","add","btn","setActiveSection","showPreviousSection","previousSection","previousElementSibling","scrollIntoView","showNextSection","nextSection","nextElementSibling","keyEventHandler","keycode","console","log","sectionWatcherCallback","sectionWatcher","isIntersecting","target","id","sectionWatcherOptions","threshold","IntersectionObserver","observe","window","addEventListener","key","code","preventDefault"],"mappings":";AACA,IAGIA,EAHEC,EAAWC,SAASC,iBAAiB,WACrCC,EAAWF,SAASC,iBAAiB,cACrCE,EAAUH,SAASC,iBAAiB,eAMpCG,EAAuB,SAACC,GAE5BH,EAASI,QAAQ,SAAAC,GAEZA,EAAKC,QAAQC,SAAWJ,EAI3BE,EAAKG,UAAUC,OAAO,UAHpBJ,EAAKG,UAAUE,IAAI,YAKvBT,EAAQG,QAAQ,SAAAO,GAEXA,EAAIL,QAAQC,SAAWJ,EAI1BQ,EAAIH,UAAUC,OAAO,UAHnBE,EAAIH,UAAUE,IAAI,aAQlBE,EAAmB,SAACL,GAExBX,EAAgBW,GAIZM,EAAsB,WACpBC,IAAAA,EAAkBlB,EAAcmB,uBAChB,MAAnBD,GACHA,EAAgBE,kBAGZC,EAAkB,WAChBC,IAAAA,EAActB,EAAcuB,mBAChB,MAAfD,GACHA,EAAYF,kBAGRI,EAAkB,SAACC,GAEfA,OAAAA,GACD,IAAA,UAEHR,IACA,MACG,IAAA,YAGHI,IAEA,MACF,QACEK,QAAQC,IAAI,2CAKZC,EAAyB,SAACjB,EAASkB,GACvClB,EAAQH,QAAQ,SAAAG,GAEVA,EAAQmB,iBAGZxB,EAAqBK,EAAQoB,OAAOC,IACpChB,EAAiBL,EAAQoB,YAKvBE,EAAwB,CAC5BC,UAAW,IAGPL,EAAiB,IAAIM,qBAAqBP,EAAwBK,GAExEhC,EAASO,QAAQ,SAAAG,GACfkB,EAAeO,QAAQzB,KAKzB0B,OAAOC,iBAAiB,UAAW,SAACC,GAGlB,YAAbA,EAAIC,OAGLD,EAAIE,iBACJjB,EAAgBe,EAAIC,OAGN,cAAbD,EAAIC,OAELD,EAAIE,iBACJjB,EAAgBe,EAAIC","file":"app.8eb8ba1e.js","sourceRoot":"../src","sourcesContent":["/*  Query selector */\nconst sections = document.querySelectorAll('section');\nconst navLinks = document.querySelectorAll('.nav-links');\nconst navBtns = document.querySelectorAll('.navbuttons');\nlet activeSection;\n\n\n/*  Helper functions */\n// const actionSectionHandler = (currentSectionId) => {\nconst activeSectionHandler = (currentSectionId) => {\n  // console.log(currentSectionId);\n  navLinks.forEach(link => {\n    // console.log(link.dataset.section);\n    if(link.dataset.section == currentSectionId){\n      link.classList.add('active');\n      return;\n    }\n    link.classList.remove('active');\n  })\n  navBtns.forEach(btn => {\n   \n    if(btn.dataset.section == currentSectionId){\n      btn.classList.add('active');\n      return;\n    }\n    btn.classList.remove('active');\n  })\n}\n\n// set active section\nconst setActiveSection = (section) => {\n  // activeSection = section.target;\n  activeSection = section;\n  // console.log(activeSection);\n}\n\nconst showPreviousSection = () => {\n  const previousSection = activeSection.previousElementSibling;\n  if(previousSection == null ){ return};\n  previousSection.scrollIntoView();\n}\n\nconst showNextSection = () => {\n  const nextSection = activeSection.nextElementSibling;\n  if(nextSection == null ){ return};\n  nextSection.scrollIntoView();\n}\n\nconst keyEventHandler = (keycode) => {\n  // console.log(keycode);\n  switch (keycode) {\n    case 'ArrowUp':\n      // console.log('up');\n      showPreviousSection();\n      break;\n    case 'ArrowDown':\n      // console.log('down');\n      // key.preventDefault();\n      showNextSection();\n\n      break;\n    default:\n      console.log('How did you get past my if statement?');\n  }\n}\n\n/*  intersection observer */\nconst sectionWatcherCallback = (section, sectionWatcher) => {\n  section.forEach(section => {\n    // console.log(section.isIntersecting);\n    if(!section.isIntersecting){return}; \n    // console.log('ya being watched!');\n    // console.log(section.target.id);\n    activeSectionHandler(section.target.id);\n    setActiveSection(section.target);\n  })\n  \n}\n\nconst sectionWatcherOptions = {\n  threshold: .5\n}\n\nconst sectionWatcher = new IntersectionObserver(sectionWatcherCallback, sectionWatcherOptions)\n\nsections.forEach(section => {\n  sectionWatcher.observe(section);\n})\n\n\n/*  event handler for keyboard */\nwindow.addEventListener('keydown', (key) => {\n  // console.log(key.keyCode);\n  // if(key.keyCode === 38){\n  if(key.code === 'ArrowUp'){\n    // console.log('you pressed up');\n    // keyEventHandler(key.code)\n    key.preventDefault();\n    keyEventHandler(key.code);\n  }\n  // if(key.keyCode === 40){\n  if(key.code === 'ArrowDown'){\n    // console.log('you pressed down');\n    key.preventDefault();\n    keyEventHandler(key.code);\n  }\n\n  return;\n})"]}